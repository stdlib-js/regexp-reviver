{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized regular expression.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|RegExp)} regular expression\n*\n* @example\n* var parseJSON = require( '@stdlib/utils-parse-json' );\n*\n* var str = '{\"type\":\"RegExp\",\"pattern\":\"ab+c\",\"flags\":\"\"}';\n*\n* var re = parseJSON( str, reviver );\n* // returns <RegExp>\n*/\nfunction reviver( key, value ) {\n\tif ( value && value.type === 'RegExp' && value.pattern ) {\n\t\treturn new RegExp( value.pattern, value.flags );\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reviver;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Revive a JSON-serialized regular expression.\n*\n* @module @stdlib/regexp-reviver\n*\n* @example\n* var parseJSON = require( '@stdlib/utils-parse-json' );\n* var reviver = require( '@stdlib/regexp-reviver' );\n*\n* var str = '{\"type\":\"RegExp\",\"pattern\":\"ab+c\",\"flags\":\"\"}';\n*\n* var re = parseJSON( str, reviver );\n* // returns <RegExp>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAqCA,SAASC,EAASC,EAAKC,EAAQ,CAC9B,OAAKA,GAASA,EAAM,OAAS,UAAYA,EAAM,QACvC,IAAI,OAAQA,EAAM,QAASA,EAAM,KAAM,EAExCA,CACR,CAKAH,EAAO,QAAUC,ICVjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "reviver", "key", "value", "main"]
}
